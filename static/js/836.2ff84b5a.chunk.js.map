{"version":3,"file":"static/js/836.2ff84b5a.chunk.js","mappings":"kMAQA,MA0FA,EA1FkBA,KACd,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACrCC,MAAO,GACPC,SAAU,GACVC,WAAY,MAETC,EAAOC,IAAYL,EAAAA,EAAAA,UAAS,KAC5BM,EAASC,IAAcP,EAAAA,EAAAA,WAAS,IAChCQ,EAAmBC,IAAwBT,EAAAA,EAAAA,WAAS,GACrDU,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBC,IAClBd,GAAWe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIhB,GAAQ,IAAE,CAACe,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,UA2BzD,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACHhB,IAASc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAEhB,KAC1CiB,EAAAA,EAAAA,MAAA,QAAMC,SA7BGC,UACjBV,EAAEW,iBACFjB,GAAW,GACXF,EAAS,IAET,IACI,MAAM,KAAEoB,SAAeC,EAAAA,EAAAA,IAAM5B,GAC7B6B,aAAaC,QAAQ,QAASH,EAAKI,OACnCF,aAAaC,QAAQ,OAAQE,KAAKC,UAAUN,EAAKO,OAEjDtB,EAAS,KACTuB,OAAOC,SAASC,QAEpB,CAAE,MAAOC,GAAM,IAADC,EAAAC,EACVjC,GAAqB,QAAZgC,EAAAD,EAAIG,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAcZ,YAAI,IAAAa,OAAN,EAAZA,EAAoBE,UAAW,+CAC5C,CAAC,QACGjC,GAAW,EACf,GAYqCa,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,QAAOrB,SAAC,WACvBF,EAAAA,EAAAA,KAAA,SACIwB,KAAK,QACLC,GAAG,QACH3B,KAAK,QACLC,MAAOnB,EAASG,MAChB2C,SAAUhC,EACViC,UAAQ,QAGhBxB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,WAAUrB,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACIwB,KAAMlC,EAAoB,OAAS,WACnCmC,GAAG,WACH3B,KAAK,WACLC,MAAOnB,EAASI,SAChB0C,SAAUhC,EACViC,UAAQ,IAEX/C,EAASI,SAAS4C,OAAS,IACxB5B,EAAAA,EAAAA,KAAA,UACIwB,KAAK,SACLvB,UAAU,uBACV4B,QAnCKC,KAC7BvC,GAAsBD,IAkCoCY,SAEjCZ,GAAoBU,EAAAA,EAAAA,KAAC+B,EAAAA,IAAkB,KAAM/B,EAAAA,EAAAA,KAACgC,EAAAA,IAAS,UAIpEhC,EAAAA,EAAAA,KAAA,UAAQwB,KAAK,SAASvB,UAAU,gBAAgBgC,SAAU7C,EAAQc,SAC7Dd,EAAU,gBAAkB,cAGrCY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,2BACwBF,EAAAA,EAAAA,KAACkC,EAAAA,GAAI,CAACC,GAAG,YAAWjC,SAAC,4B","sources":["components/pages/LoginPage.jsx"],"sourcesContent":["// frontend/src/pages/LoginPage.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { login } from '../../services/api';\r\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai'; \r\nimport '../../styles/Form.css'; // 引入通用表單樣式\r\n\r\nconst LoginPage = () => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        avatar_url: '',\r\n    });\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const { data } = await login(formData);\r\n            localStorage.setItem('token', data.token); // 儲存 token\r\n            localStorage.setItem('user', JSON.stringify(data.user)); // (可選) 儲存使用者資訊\r\n            \r\n            navigate('/'); // 導向到主頁\r\n            window.location.reload(); // 重新載入以更新 Navbar\r\n\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Login failed. Please check your credentials.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setIsPasswordVisible(!isPasswordVisible);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-page-container\">\r\n            <div className=\"form-container\">\r\n                <h1>Login</h1>\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group password-input-container\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type={isPasswordVisible ? \"text\" : \"password\"}\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                        {formData.password.length > 0 &&(\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"password-toggle-icon\"\r\n                                onClick={togglePasswordVisibility}\r\n                            >\r\n                                {isPasswordVisible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n                        {loading ? 'Logging in...' : 'Login'}\r\n                    </button>\r\n                </form>\r\n                <div className=\"switch-form-link\">\r\n                    <p>\r\n                        Don't have an account? <Link to=\"/register\">Register here</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"names":["LoginPage","formData","setFormData","useState","email","password","avatar_url","error","setError","loading","setLoading","isPasswordVisible","setIsPasswordVisible","navigate","useNavigate","handleChange","e","_objectSpread","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","data","login","localStorage","setItem","token","JSON","stringify","user","window","location","reload","err","_err$response","_err$response$data","response","message","htmlFor","type","id","onChange","required","length","onClick","togglePasswordVisibility","AiFillEyeInvisible","AiFillEye","disabled","Link","to"],"sourceRoot":""}