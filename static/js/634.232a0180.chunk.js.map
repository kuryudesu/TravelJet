{"version":3,"file":"static/js/634.232a0180.chunk.js","mappings":"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","sources":["components/pages/MyProfilePage.jsx"],"sourcesContent":["// frontend/src/pages/MyProfilePage.js\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'; // <-- 導入 useRef\r\nimport { getUserProfile, updateUserProfile, uploadAvatar } from '../../services/api';\r\nimport { FaUserCircle, FaCamera } from 'react-icons/fa'; // <-- 導入 FaCamera\r\nimport Spinner from '../Spinner/Spinner';\r\nimport '../../styles/MyProfilePage.css'; // 引入新 CSS\r\n\r\nconst MyProfilePage = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [infoData, setInfoData] = useState({ username: '', email: '' });\r\n    const [passwordData, setPasswordData] = useState({ newPassword: '', confirmPassword: '' });\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [infoMessage, setInfoMessage] = useState({ type: '', text: '' });\r\n    const [avatarMessage, setAvatarMessage] = useState({ type: '', text: '' });\r\n    const [passwordMessage, setPasswordMessage] = useState({ type: '', text: '' });\r\n\r\n    const [avatarFile, setAvatarFile] = useState(null); // <-- 新增: 儲存選擇的檔案\r\n    const [avatarPreview, setAvatarPreview] = useState(null); // <-- 新增: 儲存預覽圖片的 URL\r\n\r\n    const fileInputRef = useRef(null); // <-- 新增: 用於觸發檔案選擇器\r\n    \r\n    useEffect(() => {\r\n        const loadUserProfile = async () => {\r\n            try {\r\n                // 優先從 API 獲取最新數據\r\n                const { data } = await getUserProfile();\r\n                setUser(data);\r\n                setInfoData({ username: data.username, email: data.email });\r\n            } catch (error) {\r\n                console.error(\"API failed, falling back to localStorage\", error);\r\n                // 如果 API 失敗 (例如 token 過期)，嘗試從 localStorage 載入\r\n                const storedUser = localStorage.getItem('user');\r\n                if (storedUser) {\r\n                    const parsedUser = JSON.parse(storedUser);\r\n                    setUser(parsedUser);\r\n                    setInfoData({ username: parsedUser.username, email: parsedUser.email });\r\n                }\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        loadUserProfile();\r\n    }, []); // 空依賴項陣列確保只在首次渲染時執行\r\n\r\n    const handleInfoChange = (e) => setInfoData({...infoData, [e.target.name]: e.target.value });\r\n    const handlePasswordChange = (e) => setPasswordData({...passwordData, [e.target.name]: e.target.value });\r\n\r\n    const handleInfoSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true); setInfoMessage({ type: '', text: ''});\r\n        try {\r\n            const { data } = await updateUserProfile(infoData);\r\n            setUser(data.user); // 更新顯示的 user 資訊\r\n            localStorage.setItem('user', JSON.stringify(data.user)); // 更新 localStorage\r\n            setInfoMessage({ type: 'success', text: data.message });\r\n            setTimeout(() => {\r\n                setInfoMessage('');\r\n            }, 1000);\r\n        } catch (error) {\r\n            setInfoMessage({ type: 'error', text: error.response?.data?.message || \"Update failed.\" });\r\n            setTimeout(() => {\r\n                setInfoMessage('');\r\n            }, 1000);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n    const handlePasswordSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(passwordData.newPassword !== passwordData.confirmPassword) {\r\n            setPasswordMessage({ type: 'error', text: \"Passwords do not match.\" });\r\n            return;\r\n        }\r\n        setLoading(true); setPasswordMessage({ type: '', text: ''});\r\n        try {\r\n            const { data } = await updateUserProfile({ password: passwordData.newPassword });\r\n            setPasswordMessage({ type: 'success', text: data.message });\r\n            setPasswordData({ newPassword: '', confirmPassword: '' }); // 清空欄位\r\n            setTimeout(() => {\r\n                setPasswordMessage('');\r\n            }, 1000);\r\n            \r\n        } catch (error) {\r\n            setPasswordMessage({ type: 'error', text: error.response?.data?.message || \"Password update failed.\" });\r\n            setTimeout(() => {\r\n                setPasswordMessage('');\r\n            }, 1000);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- 新增: 處理檔案選擇和預覽的函式 ---\r\n    const handleAvatarChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setAvatarFile(file);\r\n            // 建立本地預覽 URL\r\n            const previewUrl = URL.createObjectURL(file);\r\n            setAvatarPreview(previewUrl);\r\n        }\r\n    };\r\n\r\n    // --- 新增: 處理頭像上傳的函式 ---\r\n    const handleAvatarUpload = async () => {\r\n        if (!avatarFile) return;\r\n        \r\n        const formData = new FormData();\r\n        formData.append('avatar', avatarFile);\r\n        \r\n        setLoading(true);\r\n        try {\r\n            const { data } = await uploadAvatar(formData);\r\n            \r\n            // 上傳成功後，更新 user state 和 localStorage\r\n            const updatedUser = { ...user, avatar_url: data.avatarUrl };\r\n            setUser(updatedUser);\r\n            localStorage.setItem('user', JSON.stringify(updatedUser));\r\n\r\n            setAvatarPreview(null); // 清除預覽\r\n            setAvatarMessage({ type: 'success', text: 'Avatar updated!' });\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1000);\r\n        } catch (error) {\r\n            setAvatarMessage({ type: 'error', text: error.response?.data?.message || 'Upload failed.'});\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading && !user) return <Spinner />;\r\n    // 決定顯示哪個頭像: 預覽 > 已有頭像 > 預設圖示\r\n    const displayAvatar = () => {\r\n        const backendUrl = `http://192.168.0.170:5000`; // 後端 URL\r\n        if (avatarPreview) {\r\n            return <img src={avatarPreview} alt=\"Preview\" className=\"profile-avatar-large\"/>;\r\n        }\r\n        if (user && user.avatar_url) {\r\n            const imgUrl = `${backendUrl}${user.avatar_url}?_=${new Date().getTime()}`;\r\n            return <img src={imgUrl} alt={user.username} className=\"profile-avatar-large\"/>;\r\n        }\r\n        \r\n        return <FaUserCircle className=\"profile-avatar-large\"/>;\r\n    };\r\n    \r\n    return (\r\n        <div className=\"profile-page\">\r\n            {/*  更新 Header  */}\r\n            <header className=\"profile-header\">\r\n                {/* 點擊頭像區域可以觸發檔案選擇 */}\r\n                <div className=\"avatar-uploader\" onClick={() => fileInputRef.current.click()}>\r\n                    {displayAvatar()}\r\n                    <div className=\"avatar-overlay\">\r\n                        <FaCamera />\r\n                        <span>Change</span>\r\n                    </div>\r\n                </div>\r\n                {/* 隱藏的檔案輸入框 */}\r\n                <input \r\n                    type=\"file\" \r\n                    ref={fileInputRef}\r\n                    onChange={handleAvatarChange}\r\n                    style={{ display: 'none' }} \r\n                    accept=\"image/*\" // 只接受圖片檔案\r\n                />\r\n                {avatarMessage.text && <p className={`avatar-message ${avatarMessage.type}`}>{avatarMessage.text}</p>}\r\n                <div className=\"profile-header-info\">\r\n                    <h1>{user?.username}</h1>\r\n                    <p>{user?.email}</p>\r\n                    {/* 如果有預覽圖片，顯示上傳按鈕 */}\r\n                    {avatarPreview && (\r\n                         <button onClick={handleAvatarUpload} className=\"submit-button small-btn\" disabled={loading}>\r\n                            {loading ? 'Uploading...' : 'Upload Avatar'}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </header>\r\n            <main className=\"profile-content\">\r\n                {/* --- Personal Information Card --- */}\r\n                <div className=\"profile-card\">\r\n                    <h2>Personal Information</h2>\r\n                    <form onSubmit={handleInfoSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input type=\"text\" id=\"username\" name=\"username\" value={infoData.username} onChange={handleInfoChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email Address</label>\r\n                            <input type=\"email\" id=\"email\" name=\"email\" value={infoData.email} onChange={handleInfoChange} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n                            {loading ? 'Saving...' : 'Save Changes'}\r\n                        </button>\r\n                        {infoMessage.text && <p className={`message ${infoMessage.type}`}>{infoMessage.text}</p>}\r\n                    </form>\r\n                </div>\r\n\r\n                {/* --- Password Security Card --- */}\r\n                <div className=\"profile-card\">\r\n                    <h2>Password & Security</h2>\r\n                    <form onSubmit={handlePasswordSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"newPassword\">New Password</label>\r\n                            <input type=\"password\" id=\"newPassword\" name=\"newPassword\" value={passwordData.newPassword} onChange={handlePasswordChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={passwordData.confirmPassword} onChange={handlePasswordChange} />\r\n                        </div>\r\n                         <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n                            {loading ? 'Updating...' : 'Update Password'}\r\n                        </button>\r\n                         {passwordMessage.text && <p className={`message ${passwordMessage.type}`}>{passwordMessage.text}</p>}\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyProfilePage;"],"names":["MyProfilePage","user","setUser","useState","infoData","setInfoData","username","email","passwordData","setPasswordData","newPassword","confirmPassword","loading","setLoading","infoMessage","setInfoMessage","type","text","avatarMessage","setAvatarMessage","passwordMessage","setPasswordMessage","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","fileInputRef","useRef","useEffect","async","data","getUserProfile","error","console","storedUser","localStorage","getItem","parsedUser","JSON","parse","loadUserProfile","handleInfoChange","e","_objectSpread","target","name","value","handlePasswordChange","_jsx","Spinner","_jsxs","className","children","onClick","current","click","displayAvatar","src","alt","avatar_url","imgUrl","concat","Date","getTime","FaUserCircle","FaCamera","ref","onChange","file","files","previewUrl","URL","createObjectURL","style","display","accept","formData","FormData","append","uploadAvatar","updatedUser","avatarUrl","setItem","stringify","setTimeout","window","location","reload","_error$response3","_error$response3$data","response","message","disabled","onSubmit","preventDefault","updateUserProfile","_error$response","_error$response$data","htmlFor","id","password","_error$response2","_error$response2$data"],"sourceRoot":""}